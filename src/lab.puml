@startuml

package src.humans{

abstract class Human
{
	-name : String
	-location : Places
	-mood : Moods
	-thoughts : String
	-shakeStatus : boolean
	-isRecognition : boolean
    +say(message : String, speech : Speeches, h : Human) : void
    +say(message : String, speech : Speeches) : void
    +replace(p : Places, t : TypeWalking) : void
	+see(h : Human) : void
	+see() : void
	+think(about : String) : void
}

class Accountant
{
    -name : String
    -payStatus : boolean
    -direction : String
    +payUp() : void
    +lookDirection(direction : String) : void
    +getClothes() : String
}

class Clothes
{
    -clothes : String
}

class Courier
{
    -name : String
    -accessories : String
    +run() : void
}

class President
{
    -name : String
}

class Secretary
{
    -name : String
    -lyingPlace : String
    -lieDescription : String
    -thing : String
    +lunge(h : Human) : void
    +grab(what : Accountant.Clothes.getClothes()) : void
    +shake(h : Human) : void
    +pull(h : Human, p : Places) : void
    +lie(furniture : String, how : String) : void
    +standUp() : void
    +getFaceDescription() : String
}

class Face {
    -description_chin : String
    -description_cheeks : String
}
class Manager
{
    -name : String
    -hideStatus : String
    +recognition(h : Human, status : boolean) : void
    +hide(how : String) : void
    +runFrom(startPlace : Place , finishPlace :  Place) : void
}

}
package src.locations{
class Place
{
    -name : Places
    -condition : String
    -peopleList : ArrayList<Human>
    +addPeople(p : Human) : void
    +removePeople(p : Human) : void
    +getPeople() : String
}
}
package src.actionsTypes{
enum TypeWalking
{
Walk
Rush
Run
}

enum Speeches
{
SHOUT
FORMIDABLEVOICE
}

}
package src.sounds{

class Sound {
-name : String
-isHeard : boolean
+heard() : void
}
}

package src.moodings{
enum Moods
{
SHOCKED
STUNNED
CONFUSED
CRYING
NEUTRAL
CRAZYNESS
}


}
package src.interfaces{
interface Talkable
{
+say(message : String, speech : Speeches, h : Human) : void
+say(message : String, speech : Speeches) : void
}

interface Seen
{
+see() : void
+see(what : String) : void
}


}
package src {
class Main
{
+main(String[]) : void
}
}

package src.exception {

class RuntimeException {}
class Exception {}
class NameError {
    +NameError(errorMessage : String) : void
}
class NoClothesError {
    +NoClothesError(errorMessage : String) : void
}
}
RuntimeException <|- NameError
Exception <|- NoClothesError

'Talkable <|-- Human



Human <|-- Courier
Human <|-- Accountant
Human <|-- President
Human <|-- Secretary
Human <|-- Manager

Secretary +-- Face
Accountant +-- Clothes

Seen <|-- Human
Talkable <|-- Human





@enduml